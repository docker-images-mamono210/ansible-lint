---
name: build
on: [deployment, push]

jobs:
  detect-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3

      - name: Install Yelp detect-secrets
        run: |
          pip install detect-secrets

      - name: Execulte detect-secrets(disabled KeywordDetector plugin)
        run: |
          detect-secrets scan --disable-plugin KeywordDetector \
          | jq .results > results.json

      - name: Check whether detect-secrets found vulnerability
        run: |
          line=$(cat results.json | wc -w)
          if [ $line -gt 2 ]; then
            echo "vulnerability was found"
            detect-secrets scan | jq .results -C
            exit 1;
          fi

      - name: Show detect-secrets version
        run: |
          pip list | grep detect-secrets \
          | GREP_COLORS='mt=01;34' egrep --color=always '[[:digit:]]' \
          | GREP_COLORS='mt=01;34' egrep --color=always '\.' \
          | GREP_COLORS='mt=01;33' egrep --color=always 'detect-secrets.* '

  github-container-registory:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT}}

      - name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          load: true
          tags: ansible-lint:preview

      - name: Get Ansible-lint version
        id: ansible-lint_version
        run: |
          tag=$(cat requirements.txt | awk -F "==" 'NR==1 {print $2}')
          echo "tag=${tag}" >> $GITHUB_OUTPUT

      - name: Get Ansible version
        id: ansible_version
        run: |
          tag=$(cat requirements.txt | awk -F "==" 'NR==2 {print $2}')
          echo "tag=${tag}" >> $GITHUB_OUTPUT

      - name: Build and push 1
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile
          push: true
          tags: ghcr.io/docker-images-mamono210/ansible-lint:${{ steps.ansible-lint_version.outputs.tag }}_ansible-${{ steps.ansible_version.outputs.tag }}

      - name: Build and push 2
        uses: docker/build-push-action@v4
        with:
          file: ${{ matrix.molecule-driver }}/Dockerfile
          push: true
          tags: ghcr.io/docker-images-mamono210/ansible-lint:latest

  trailing-whitespace:
    name: Find Trailing Whitespace
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: harupy/find-trailing-whitespace@56310d70ae8fd21afec8d4307d2d9ab6c15e7c5d

  yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@2576378a8e339169678f9939646ee3ee325e845c
        with:
          config_file: .yamllint
